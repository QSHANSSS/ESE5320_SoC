-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter_HW_stream_Filter_vertical_HW_stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_stream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_stream_full_n : IN STD_LOGIC;
    output_stream_write : OUT STD_LOGIC;
    temp_stream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    temp_stream_empty_n : IN STD_LOGIC;
    temp_stream_read : OUT STD_LOGIC );
end;


architecture behav of Filter_HW_stream_Filter_vertical_HW_stream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_1F3EC : STD_LOGIC_VECTOR (16 downto 0) := "11111001111101100";
    constant ap_const_lv9_1DA : STD_LOGIC_VECTOR (8 downto 0) := "111011010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_62 : STD_LOGIC_VECTOR (14 downto 0) := "000000001100010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal output_stream_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal select_ln219_1_reg_517 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_1_reg_517_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln232_reg_513 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_251 : STD_LOGIC_VECTOR (16 downto 0);
    signal Y_reg_262 : STD_LOGIC_VECTOR (8 downto 0);
    signal X_reg_273 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln232_fu_284_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln232_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_1_fu_328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_1_reg_517_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_1_reg_517_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_2_fu_336_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln219_2_reg_521 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln219_fu_344_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln219_reg_526 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_0_addr_reg_530 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_1_addr_1_reg_535 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_2_addr_1_reg_541 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_3_addr_1_reg_547 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_4_addr_1_reg_553 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_5_addr_1_reg_559 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_1_addr_reg_565 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_2_addr_reg_570 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_3_addr_reg_575 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_4_addr_reg_580 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_5_addr_reg_585 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln234_fu_363_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_595 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_595_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_load_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_load_reg_600_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_load_reg_605 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_load_reg_605_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_4_load_reg_615 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_4_load_reg_615_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_5_load_reg_620 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_5_load_reg_620_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_load_reg_625 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_i_fu_385_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_reg_630 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp2_i_fu_391_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp2_i_reg_636 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal temp_0_ce0 : STD_LOGIC;
    signal temp_0_we0 : STD_LOGIC;
    signal temp_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_1_ce0 : STD_LOGIC;
    signal temp_1_we0 : STD_LOGIC;
    signal temp_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_1_ce1 : STD_LOGIC;
    signal temp_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_2_ce0 : STD_LOGIC;
    signal temp_2_we0 : STD_LOGIC;
    signal temp_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_2_ce1 : STD_LOGIC;
    signal temp_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_3_ce0 : STD_LOGIC;
    signal temp_3_we0 : STD_LOGIC;
    signal temp_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_3_ce1 : STD_LOGIC;
    signal temp_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_4_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_4_ce0 : STD_LOGIC;
    signal temp_4_we0 : STD_LOGIC;
    signal temp_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_4_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_4_ce1 : STD_LOGIC;
    signal temp_5_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_5_ce0 : STD_LOGIC;
    signal temp_5_we0 : STD_LOGIC;
    signal temp_5_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_5_ce1 : STD_LOGIC;
    signal ap_phi_mux_Y_phi_fu_266_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal X_cast_i_fu_348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln234_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln232_1_fu_310_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal cmp2_i_mid1_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp2_i66_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_fu_302_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln240_fu_379_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln246_1_fu_376_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln240_1_fu_382_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln246_fu_373_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal temp_0_load_cast_i_fu_400_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_cast_i_fu_397_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp41_i_fu_403_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp5_i_fu_409_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_i_fu_421_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl4_i_fu_432_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_i_fu_428_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl4_cast_i_fu_439_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_i_fu_452_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl_cast_i_fu_459_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp2_cast69_i_fu_449_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_i_fu_463_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_499_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln246_4_fu_473_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_cast_i_fu_469_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln246_1_fu_476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_i_fu_443_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal Sum_fu_482_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_499_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_499_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_499_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_499_ce : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_499_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_499_p20 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_condition_55 : BOOLEAN;
    signal ap_condition_319 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component Filter_HW_stream_mac_muladd_8ns_8ns_10ns_15_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Filter_HW_stream_Filter_vertical_HW_stream_temp_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter_HW_stream_Filter_vertical_HW_stream_temp_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    temp_0_U : component Filter_HW_stream_Filter_vertical_HW_stream_temp_0
    generic map (
        DataWidth => 8,
        AddressRange => 474,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_0_addr_reg_530,
        ce0 => temp_0_ce0,
        we0 => temp_0_we0,
        d0 => temp_0_d0,
        q0 => temp_0_q0);

    temp_1_U : component Filter_HW_stream_Filter_vertical_HW_stream_temp_1
    generic map (
        DataWidth => 8,
        AddressRange => 474,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_1_address0,
        ce0 => temp_1_ce0,
        we0 => temp_1_we0,
        d0 => temp_1_d0,
        address1 => temp_1_address1,
        ce1 => temp_1_ce1,
        q1 => temp_1_q1);

    temp_2_U : component Filter_HW_stream_Filter_vertical_HW_stream_temp_1
    generic map (
        DataWidth => 8,
        AddressRange => 474,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_2_address0,
        ce0 => temp_2_ce0,
        we0 => temp_2_we0,
        d0 => temp_2_d0,
        address1 => temp_2_address1,
        ce1 => temp_2_ce1,
        q1 => temp_2_q1);

    temp_3_U : component Filter_HW_stream_Filter_vertical_HW_stream_temp_1
    generic map (
        DataWidth => 8,
        AddressRange => 474,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_3_address0,
        ce0 => temp_3_ce0,
        we0 => temp_3_we0,
        d0 => temp_3_d0,
        address1 => temp_3_address1,
        ce1 => temp_3_ce1,
        q1 => temp_3_q1);

    temp_4_U : component Filter_HW_stream_Filter_vertical_HW_stream_temp_1
    generic map (
        DataWidth => 8,
        AddressRange => 474,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_4_address0,
        ce0 => temp_4_ce0,
        we0 => temp_4_we0,
        d0 => temp_4_d0,
        address1 => temp_4_address1,
        ce1 => temp_4_ce1,
        q1 => temp_4_q1);

    temp_5_U : component Filter_HW_stream_Filter_vertical_HW_stream_temp_1
    generic map (
        DataWidth => 8,
        AddressRange => 474,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_5_address0,
        ce0 => temp_5_ce0,
        we0 => temp_5_we0,
        d0 => temp_stream_dout,
        address1 => temp_5_address1,
        ce1 => temp_5_ce1,
        q1 => temp_5_q1);

    mac_muladd_8ns_8ns_10ns_15_4_1_U14 : component Filter_HW_stream_mac_muladd_8ns_8ns_10ns_15_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_499_p0,
        din1 => grp_fu_499_p1,
        din2 => grp_fu_499_p2,
        ce => grp_fu_499_ce,
        dout => grp_fu_499_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    X_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_fu_290_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                X_reg_273 <= add_ln234_fu_363_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                X_reg_273 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    Y_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Y_reg_262 <= select_ln219_2_reg_521;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                Y_reg_262 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_fu_290_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_251 <= add_ln232_fu_284_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_251 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln232_reg_513 <= icmp_ln232_fu_290_p2;
                select_ln219_1_reg_517_pp0_iter1_reg <= select_ln219_1_reg_517;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_fu_290_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln219_1_reg_517 <= select_ln219_1_fu_328_p3;
                temp_0_addr_reg_530 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                trunc_ln219_reg_526 <= trunc_ln219_fu_344_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                select_ln219_1_reg_517_pp0_iter2_reg <= select_ln219_1_reg_517_pp0_iter1_reg;
                select_ln219_1_reg_517_pp0_iter3_reg <= select_ln219_1_reg_517_pp0_iter2_reg;
                temp_1_load_reg_600_pp0_iter2_reg <= temp_1_load_reg_600;
                temp_2_load_reg_605_pp0_iter2_reg <= temp_2_load_reg_605;
                temp_4_load_reg_615_pp0_iter2_reg <= temp_4_load_reg_615;
                temp_5_load_reg_620_pp0_iter2_reg <= temp_5_load_reg_620;
                tmp_reg_595_pp0_iter2_reg <= tmp_reg_595;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_fu_290_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln219_2_reg_521 <= select_ln219_2_fu_336_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln219_1_reg_517_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                temp_0_load_reg_625 <= temp_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln219_1_fu_328_p3 = ap_const_lv1_0) and (icmp_ln232_fu_290_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                temp_1_addr_1_reg_535 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_2_addr_1_reg_541 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_3_addr_1_reg_547 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_4_addr_1_reg_553 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_5_addr_1_reg_559 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln219_1_fu_328_p3 = ap_const_lv1_1) and (icmp_ln232_fu_290_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                temp_1_addr_reg_565 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_2_addr_reg_570 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_3_addr_reg_575 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_4_addr_reg_580 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
                temp_5_addr_reg_585 <= X_cast_i_fu_348_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                temp_1_load_reg_600 <= temp_1_q1;
                temp_2_load_reg_605 <= temp_2_q1;
                temp_4_load_reg_615 <= temp_4_q1;
                temp_5_load_reg_620 <= temp_5_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln219_1_reg_517_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp2_i_reg_636 <= tmp2_i_fu_391_p2;
                tmp_i_reg_630 <= tmp_i_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_595 <= temp_stream_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, icmp_ln232_fu_290_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln232_fu_290_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln232_fu_290_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    Sum_fu_482_p2 <= std_logic_vector(unsigned(add_ln246_1_fu_476_p2) + unsigned(tmp1_i_fu_443_p2));
    X_cast_i_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln219_fu_302_p3),64));
    add_ln232_1_fu_310_p2 <= std_logic_vector(unsigned(ap_phi_mux_Y_phi_fu_266_p4) + unsigned(ap_const_lv9_1));
    add_ln232_fu_284_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_251) + unsigned(ap_const_lv17_1));
    add_ln234_fu_363_p2 <= std_logic_vector(unsigned(select_ln219_fu_302_p3) + unsigned(ap_const_lv9_1));
    add_ln246_1_fu_476_p2 <= std_logic_vector(unsigned(zext_ln246_4_fu_473_p1) + unsigned(tmp3_cast_i_fu_469_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(output_stream_full_n, temp_stream_empty_n, ap_enable_reg_pp0_iter4, select_ln219_1_reg_517_pp0_iter3_reg, ap_enable_reg_pp0_iter1, icmp_ln232_reg_513)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (temp_stream_empty_n = ap_const_logic_0)) or ((select_ln219_1_reg_517_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (output_stream_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(output_stream_full_n, temp_stream_empty_n, ap_enable_reg_pp0_iter4, select_ln219_1_reg_517_pp0_iter3_reg, ap_enable_reg_pp0_iter1, icmp_ln232_reg_513)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (temp_stream_empty_n = ap_const_logic_0)) or ((select_ln219_1_reg_517_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (output_stream_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(output_stream_full_n, temp_stream_empty_n, ap_enable_reg_pp0_iter4, select_ln219_1_reg_517_pp0_iter3_reg, ap_enable_reg_pp0_iter1, icmp_ln232_reg_513)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (temp_stream_empty_n = ap_const_logic_0)) or ((select_ln219_1_reg_517_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (output_stream_full_n = ap_const_logic_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(temp_stream_empty_n, icmp_ln232_reg_513)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln232_reg_513 = ap_const_lv1_0) and (temp_stream_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(output_stream_full_n, select_ln219_1_reg_517_pp0_iter3_reg)
    begin
                ap_block_state6_pp0_stage0_iter4 <= ((select_ln219_1_reg_517_pp0_iter3_reg = ap_const_lv1_0) and (output_stream_full_n = ap_const_logic_0));
    end process;


    ap_condition_319_assign_proc : process(select_ln219_1_reg_517, trunc_ln219_reg_526)
    begin
                ap_condition_319 <= (not((trunc_ln219_reg_526 = ap_const_lv3_0)) and not((trunc_ln219_reg_526 = ap_const_lv3_4)) and not((trunc_ln219_reg_526 = ap_const_lv3_3)) and not((trunc_ln219_reg_526 = ap_const_lv3_2)) and not((trunc_ln219_reg_526 = ap_const_lv3_1)) and (select_ln219_1_reg_517 = ap_const_lv1_1));
    end process;


    ap_condition_55_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_55 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln232_fu_290_p2)
    begin
        if ((icmp_ln232_fu_290_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_Y_phi_fu_266_p4_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln232_reg_513, Y_reg_262, select_ln219_2_reg_521)
    begin
        if (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_Y_phi_fu_266_p4 <= select_ln219_2_reg_521;
        else 
            ap_phi_mux_Y_phi_fu_266_p4 <= Y_reg_262;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp2_i66_fu_322_p2 <= "1" when (unsigned(ap_phi_mux_Y_phi_fu_266_p4) < unsigned(ap_const_lv9_6)) else "0";
    cmp2_i_mid1_fu_316_p2 <= "1" when (unsigned(add_ln232_1_fu_310_p2) < unsigned(ap_const_lv9_6)) else "0";

    grp_fu_499_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_499_ce <= ap_const_logic_1;
        else 
            grp_fu_499_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_499_p0 <= grp_fu_499_p00(8 - 1 downto 0);
    grp_fu_499_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_3_q1),15));
    grp_fu_499_p1 <= ap_const_lv15_62(8 - 1 downto 0);
    grp_fu_499_p2 <= grp_fu_499_p20(10 - 1 downto 0);
    grp_fu_499_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_i_fu_409_p3),15));
    icmp_ln232_fu_290_p2 <= "1" when (indvar_flatten_reg_251 = ap_const_lv17_1F3EC) else "0";
    icmp_ln234_fu_296_p2 <= "1" when (X_reg_273 = ap_const_lv9_1DA) else "0";

    output_stream_blk_n_assign_proc : process(output_stream_full_n, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, select_ln219_1_reg_517_pp0_iter3_reg)
    begin
        if (((select_ln219_1_reg_517_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_stream_blk_n <= output_stream_full_n;
        else 
            output_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_stream_din <= Sum_fu_482_p2(15 downto 8);

    output_stream_write_assign_proc : process(ap_enable_reg_pp0_iter4, select_ln219_1_reg_517_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((select_ln219_1_reg_517_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_stream_write <= ap_const_logic_1;
        else 
            output_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    p_shl3_cast_i_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_i_fu_421_p3),16));
    p_shl3_i_fu_421_p3 <= (tmp_i_reg_630 & ap_const_lv6_0);
    p_shl4_cast_i_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_i_fu_432_p3),16));
    p_shl4_i_fu_432_p3 <= (tmp_i_reg_630 & ap_const_lv1_0);
    p_shl_cast_i_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_i_fu_452_p3),14));
    p_shl_i_fu_452_p3 <= (tmp2_i_reg_636 & ap_const_lv4_0);
    select_ln219_1_fu_328_p3 <= 
        cmp2_i_mid1_fu_316_p2 when (icmp_ln234_fu_296_p2(0) = '1') else 
        cmp2_i66_fu_322_p2;
    select_ln219_2_fu_336_p3 <= 
        add_ln232_1_fu_310_p2 when (icmp_ln234_fu_296_p2(0) = '1') else 
        ap_phi_mux_Y_phi_fu_266_p4;
    select_ln219_fu_302_p3 <= 
        ap_const_lv9_0 when (icmp_ln234_fu_296_p2(0) = '1') else 
        X_reg_273;

    temp_0_ce0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_0_ce0 <= ap_const_logic_1;
        else 
            temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_0_d0_assign_proc : process(temp_stream_dout, select_ln219_1_reg_517, trunc_ln219_reg_526, temp_1_q1, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_0))) then 
                temp_0_d0 <= temp_stream_dout;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_0_d0 <= temp_1_q1;
            else 
                temp_0_d0 <= "XXXXXXXX";
            end if;
        else 
            temp_0_d0 <= "XXXXXXXX";
        end if; 
    end process;

    temp_0_load_cast_i_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_0_load_reg_625),9));

    temp_0_we0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_0_we0 <= ap_const_logic_1;
        else 
            temp_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_1_address0_assign_proc : process(select_ln219_1_reg_517, trunc_ln219_reg_526, temp_1_addr_1_reg_535, temp_1_addr_reg_565, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_1))) then 
                temp_1_address0 <= temp_1_addr_reg_565;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_1_address0 <= temp_1_addr_1_reg_535;
            else 
                temp_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            temp_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    temp_1_address1 <= X_cast_i_fu_348_p1(9 - 1 downto 0);

    temp_1_ce0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_1_ce0 <= ap_const_logic_1;
        else 
            temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_1_ce1 <= ap_const_logic_1;
        else 
            temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_1_d0_assign_proc : process(temp_stream_dout, select_ln219_1_reg_517, trunc_ln219_reg_526, temp_2_q1, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_1))) then 
                temp_1_d0 <= temp_stream_dout;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_1_d0 <= temp_2_q1;
            else 
                temp_1_d0 <= "XXXXXXXX";
            end if;
        else 
            temp_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_1_we0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_1_we0 <= ap_const_logic_1;
        else 
            temp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_address0_assign_proc : process(select_ln219_1_reg_517, trunc_ln219_reg_526, temp_2_addr_1_reg_541, temp_2_addr_reg_570, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_2))) then 
                temp_2_address0 <= temp_2_addr_reg_570;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_2_address0 <= temp_2_addr_1_reg_541;
            else 
                temp_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            temp_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    temp_2_address1 <= X_cast_i_fu_348_p1(9 - 1 downto 0);

    temp_2_ce0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_2_ce0 <= ap_const_logic_1;
        else 
            temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_2_ce1 <= ap_const_logic_1;
        else 
            temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_2_d0_assign_proc : process(temp_stream_dout, select_ln219_1_reg_517, trunc_ln219_reg_526, temp_3_q1, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_2))) then 
                temp_2_d0 <= temp_stream_dout;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_2_d0 <= temp_3_q1;
            else 
                temp_2_d0 <= "XXXXXXXX";
            end if;
        else 
            temp_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_2_we0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_2_we0 <= ap_const_logic_1;
        else 
            temp_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_3_address0_assign_proc : process(select_ln219_1_reg_517, trunc_ln219_reg_526, temp_3_addr_1_reg_547, temp_3_addr_reg_575, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_3))) then 
                temp_3_address0 <= temp_3_addr_reg_575;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_3_address0 <= temp_3_addr_1_reg_547;
            else 
                temp_3_address0 <= "XXXXXXXXX";
            end if;
        else 
            temp_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    temp_3_address1 <= X_cast_i_fu_348_p1(9 - 1 downto 0);

    temp_3_ce0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_3_ce0 <= ap_const_logic_1;
        else 
            temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_3_ce1 <= ap_const_logic_1;
        else 
            temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_3_d0_assign_proc : process(temp_stream_dout, select_ln219_1_reg_517, trunc_ln219_reg_526, temp_4_q1, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_3))) then 
                temp_3_d0 <= temp_stream_dout;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_3_d0 <= temp_4_q1;
            else 
                temp_3_d0 <= "XXXXXXXX";
            end if;
        else 
            temp_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_3_we0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_3_we0 <= ap_const_logic_1;
        else 
            temp_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_4_address0_assign_proc : process(select_ln219_1_reg_517, trunc_ln219_reg_526, temp_4_addr_1_reg_553, temp_4_addr_reg_580, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_4))) then 
                temp_4_address0 <= temp_4_addr_reg_580;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_4_address0 <= temp_4_addr_1_reg_553;
            else 
                temp_4_address0 <= "XXXXXXXXX";
            end if;
        else 
            temp_4_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    temp_4_address1 <= X_cast_i_fu_348_p1(9 - 1 downto 0);

    temp_4_ce0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_4_ce0 <= ap_const_logic_1;
        else 
            temp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_4_ce1 <= ap_const_logic_1;
        else 
            temp_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_4_d0_assign_proc : process(temp_stream_dout, select_ln219_1_reg_517, trunc_ln219_reg_526, temp_5_q1, ap_condition_55)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if (((select_ln219_1_reg_517 = ap_const_lv1_1) and (trunc_ln219_reg_526 = ap_const_lv3_4))) then 
                temp_4_d0 <= temp_stream_dout;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_4_d0 <= temp_5_q1;
            else 
                temp_4_d0 <= "XXXXXXXX";
            end if;
        else 
            temp_4_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_4_we0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln219_reg_526 = ap_const_lv3_4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_4_we0 <= ap_const_logic_1;
        else 
            temp_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_5_address0_assign_proc : process(select_ln219_1_reg_517, temp_5_addr_1_reg_559, temp_5_addr_reg_585, ap_condition_55, ap_condition_319)
    begin
        if ((ap_const_boolean_1 = ap_condition_55)) then
            if ((ap_const_boolean_1 = ap_condition_319)) then 
                temp_5_address0 <= temp_5_addr_reg_585;
            elsif ((select_ln219_1_reg_517 = ap_const_lv1_0)) then 
                temp_5_address0 <= temp_5_addr_1_reg_559;
            else 
                temp_5_address0 <= "XXXXXXXXX";
            end if;
        else 
            temp_5_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    temp_5_address1 <= X_cast_i_fu_348_p1(9 - 1 downto 0);

    temp_5_ce0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((trunc_ln219_reg_526 = ap_const_lv3_0)) and not((trunc_ln219_reg_526 = ap_const_lv3_4)) and not((trunc_ln219_reg_526 = ap_const_lv3_3)) and not((trunc_ln219_reg_526 = ap_const_lv3_2)) and not((trunc_ln219_reg_526 = ap_const_lv3_1)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_5_ce0 <= ap_const_logic_1;
        else 
            temp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_5_ce1 <= ap_const_logic_1;
        else 
            temp_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_5_we0_assign_proc : process(select_ln219_1_reg_517, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln219_reg_526)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not((trunc_ln219_reg_526 = ap_const_lv3_0)) and not((trunc_ln219_reg_526 = ap_const_lv3_4)) and not((trunc_ln219_reg_526 = ap_const_lv3_3)) and not((trunc_ln219_reg_526 = ap_const_lv3_2)) and not((trunc_ln219_reg_526 = ap_const_lv3_1)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (select_ln219_1_reg_517 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            temp_5_we0 <= ap_const_logic_1;
        else 
            temp_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_stream_blk_n_assign_proc : process(temp_stream_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln232_reg_513)
    begin
        if (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_stream_blk_n <= temp_stream_empty_n;
        else 
            temp_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    temp_stream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln232_reg_513, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln232_reg_513 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temp_stream_read <= ap_const_logic_1;
        else 
            temp_stream_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_i_fu_443_p2 <= std_logic_vector(unsigned(p_shl3_cast_i_fu_428_p1) - unsigned(p_shl4_cast_i_fu_439_p1));
    tmp2_cast69_i_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_i_reg_636),14));
    tmp2_i_fu_391_p2 <= std_logic_vector(unsigned(zext_ln240_1_fu_382_p1) + unsigned(zext_ln246_fu_373_p1));
        tmp3_cast_i_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp3_i_fu_463_p2),16));

    tmp3_i_fu_463_p2 <= std_logic_vector(unsigned(p_shl_cast_i_fu_459_p1) - unsigned(tmp2_cast69_i_fu_449_p1));
    tmp41_i_fu_403_p2 <= std_logic_vector(unsigned(temp_0_load_cast_i_fu_400_p1) + unsigned(tmp_1_cast_i_fu_397_p1));
    tmp5_i_fu_409_p3 <= (tmp41_i_fu_403_p2 & ap_const_lv1_0);
    tmp_1_cast_i_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_595_pp0_iter2_reg),9));
    tmp_i_fu_385_p2 <= std_logic_vector(unsigned(zext_ln240_fu_379_p1) + unsigned(zext_ln246_1_fu_376_p1));
    trunc_ln219_fu_344_p1 <= select_ln219_2_fu_336_p3(3 - 1 downto 0);
    zext_ln240_1_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_5_load_reg_620_pp0_iter2_reg),9));
    zext_ln240_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_4_load_reg_615_pp0_iter2_reg),9));
    zext_ln246_1_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_2_load_reg_605_pp0_iter2_reg),9));
    zext_ln246_4_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_499_p3),16));
    zext_ln246_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_1_load_reg_600_pp0_iter2_reg),9));
end behav;
